buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.almibe', name: 'naps', version: '0.0.1-SNAPSHOT'
    }
}

apply plugin: 'org.almibe.naps'

naps {
    defaultTemplate = "main.html"
}

task test(dependsOn: [':clean', ':naps']) << {
    def expectedFiles = getAllFiles('src/test/expected')
    def napsFiles = getAllFiles('build/naps/site')
    def error = false
    def fileNameIterator = napsFiles.entrySet().iterator()
    while(fileNameIterator.hasNext()) {
        def currentFile = fileNameIterator.next()
        if(expectedFiles.containsKey(currentFile.key)) {
            def expectedFile = expectedFiles.get(currentFile.key)
            if(expectedFile.text == currentFile.value.text) {
                fileNameIterator.remove()
                expectedFiles.remove(currentFile.key)
            } else {
                throw new RuntimeException("Error: ${currentFile.key} not equal")
            }
        } else {
            throw new RuntimeException("Error: ${currentFile.key} not in expected files")
        }
    }
    if(expectedFiles.size() > 0) {
        throw new RuntimeException("Error: ${expectedFiles} not in output directory")
    }
}

task clean() << {
    project.file('build/').deleteDir()

}

def getAllFiles(String directory) {
    def result = [:]
    def fileTree = project.fileTree(dir:directory)
    def rootLocation = fileTree.dir.absolutePath
    fileTree.forEach {
        result.put(it.absolutePath - rootLocation, it)
    }
    return result
}
